#include <bits/stdc++.h>
using namespace std;
class graph {
public:
  unordered_map<int, list<int>> adj;
  void addedge(int u, int v, bool direction) {
    // direction=0 in case of undirected
    // direction=1 in case of directed
    // create an edge from u to v
    adj[u].push_back(v);
    if (direction == 0) {
      // in case of undirected graph
      adj[v].push_back(u);
    }
  }
  void printadjlist() {
    for (auto i : adj) {
      cout << i.first << "  ->";
      for (auto j : i.second) {
        cout << j << " ,";
        // for traversing list of neighbour nodes
      }
      cout << endl;
    }
  }
};
int main() {
  int nodes;
  int edges;
  cout << "enter the number of nodes";
  cin >> nodes;
  cout << "enter the number of edges";
  cin >> edges;
  graph g;
  for (int i = 0; i < edges; i++) {
    int u, v;
    cin >> u >> v;
    g.addedge(u, v, 0);
  }

  g.printadjlist();
}
