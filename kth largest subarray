brute force-
#include<bits/stdc++.h>
int getKthLargest(vector<int> &arr, int k)
{
	vector<int>ans;
   
    for(int i=0 ; i<arr.size() ; i++)
    {
         int sum=0;
      for(int j=i ; j<arr.size() ; j++)
      {
          sum+=arr[j];
          ans.push_back(sum);
      }
    }
    sort(ans.begin(),ans.end());
    return ans[ans.size()-k];
}

time-Nsquarelogn
space-nsquare



#include<bits/stdc++.h>
int getKthLargest(vector<int> &arr, int k)
{
    priority_queue<int,vector<int>,greater<int>>minheap;
    for(int i=0 ; i<arr.size() ; i++)
    {
         int sum=0;
      for(int j=i ; j<arr.size() ; j++)
      {
          sum+=arr[j];
          if(minheap.size()<k)
          {
               minheap.push(sum);
          }
          else
          {
             if(minheap.top()<sum)
         {
           minheap.pop();
           minheap.push(sum);
       }
          }
      }
    }
            return minheap.top();
}


time=O(Nsquare)logK
space=O(k)
