APPROACH-
As long as there are at least (n - 1) connections, there is definitely a way to connect all computers.
FIRST COUNT THE NUMBER OF COMPONENT
USE DFS AND TRACK THE VISITED NODES
THEN RETURN NUMBER OF COMPONENT-1

class Solution {
public:
    void dfs(vector<int>g[],vector<int>&vis,int node)
    {
           vis[node]=1;
           for(int it=0 ; it<g[node].size() ; it++)
           {
               if(!vis[g[node][it]])
                dfs(g,vis,g[node][it]);
           }
        
    }
    int makeConnected(int n, vector<vector<int>>& connections)
    {
        vector<int> visited(n,0);
        int c = 0;
        if(connections.size() < n-1) return -1;
        
        vector<int> list[n];
        
        for(int i = 0; i<connections.size(); i++){
            list[connections[i][0]].push_back(connections[i][1]); 
            list[connections[i][1]].push_back(connections[i][0]);
        }        
        
        for(int i =0; i<n;i++){
            if(!visited[i]){
                dfs(list,visited,i);
                c++;
            } 
        }     
        return c-1;
    }
};
