#include<bits/stdc++.h>
using namespace std;
class heap
{
 int arr[250];
int size;
public:
heap()
{
	size=0;
}
void heapify(int arr[],int size,int i)
{
	 int left=2*i;
	int right=2*i+1;
	int index=i;
	int maxi=index;
	if(left<=size and arr[left]>arr[maxi])
	maxi=left;
	else if(right<=size and arr[right]>arr[maxi])
	maxi=right;
	if(maxi!=index)
	{
	   swap(arr[index],arr[maxi]);
		heapify(arr,size,maxi);
	}
	else
	{
		return;
	}
}
void heapsort(int arr[],int size)
{
	int n=size;    
	while(n>1)   //single element sorted hoga last mai
		{
			 swap(arr[n],arr[1]);    //first step is to swap first element with last node kyuki max heap mai first element max hoga
			n--;
			 heapify(arr,n,1);      //rest of the array ko swap bss last element shi place pr h 
		}
}
};
int main()
{
	 heap h;
	int arr[]={-1,52,50,43,55,34};
	int size=5;
	for(int i=size/2 ; i>0 ; i--)
		{
			 h.heapify(arr,size,i);
		}
	for(int i=1 ; i<=size ; i++)
		cout<<arr[i]<<" ";
	cout<<endl;
	h.heapsort(arr,size);
	for(int i=1 ; i<=size ; i++)
		cout<<arr[i]<<" ";
	return 0;
}


time=nlogn
