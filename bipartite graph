#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
    bool dfs(vector<int>adj[],vector<int>&color,int curr)
      
    {
        if(color[curr]==-1)
            color[curr]=0;
        for(auto it:adj[curr])
         {
            if(color[it]==-1)
            {
                color[it]=!color[curr];
            if(!dfs(adj,color,it))
            return false;
            }
            else
            if(color[it]==color[curr])
            return false;
        }
        return true;
    }
	bool isBipartite(int V, vector<int>adj[])
	{
	       vector<int> color(V , -1);
	   
	   for(int i=0 ; i < V ; i++)
	   {
	       if(color[i] == -1)
	            if( !dfs(adj , color, i) )
	                return false;
	   }
	   
	   return true;
	   
	}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int V, E;
		cin >> V >> E;
		vector<int>adj[V];
		for(int i = 0; i < E; i++){
			int u, v;
			cin >> u >> v;
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		Solution obj;
		bool ans = obj.isBipartite(V, adj);    
		if(ans)cout << "1\n";
		else cout << "0\n";  
	}
	return 0;
}
// } Driver Code Ends
